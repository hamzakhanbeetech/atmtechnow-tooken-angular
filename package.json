{
  "name": "tookan-new",
  "version": "0.0.0",
  "license": "MIT",
  "scripts": {
    "ng": "ng",
    "start": "ng serve",
    "build-i18n-prod-all-build-only": "for lang in en ar cs da de pl el es fil fr hi hu id it ja ka ms nl pt ru sw th tr vi zh; do ng build --prod --output-path=dist/$lang --build-optimizer=false --bh /v2/$lang/ --i18n-file=src/i18n/messages.$lang.xlf --i18n-format=xlf --locale=$lang; done",
    "build-i18n-prod-all": "rm -rf dist-serve-old; cp -R dist-serve dist-serve-old; for lang in en ar cs da de pl el es fil fr hi hu id it ja ka ms nl pt ru sw th tr vi zh; do ng build --prod --output-path=dist/$lang --build-optimizer=false --bh /v2/$lang/ --i18n-file=src/i18n/messages.$lang.xlf --i18n-format=xlf --locale=$lang; rm -rf dist-serve/$lang; cp -R dist/$lang dist-serve/$lang; done",
    "build-i18n-all": "rm -rf dist-serve-old; cp -R dist-serve dist-serve-old; for lang in en ar cs da de el pl es fil fr hi hu id it ja ka ms nl pt ru sw th tr vi zh; do ng build --output-path=dist/$lang --aot=true -oh=all -sm=false -ec=true -nc=false --build-optimizer=true --bh /v2/$lang/ --i18n-file=src/i18n/messages.$lang.xlf --i18n-format=xlf --locale=$lang; rm -rf dist-serve/$lang; cp -R dist/$lang dist-serve/$lang; done",
    "build-i18n": "read varname;for lang in $varname; do ng build --output-path=dist/$lang --aot=true -oh=all -sm=false -ec=true -nc=false --build-optimizer=true --bh /v2/$lang/ --i18n-file=src/i18n/messages.$lang.xlf --i18n-format=xlf --locale=$lang; rm -rf dist-serve/$lang; cp -R dist/$lang dist-serve/$lang; done",
    "build-i18n-en": "ng build --output-path=dist/en --aot=true -oh=all -sm=false -ec=true -nc=false --build-optimizer=true --bh /v2/en/ --i18n-file=src/i18n/messages.en.xlf --i18n-format=xlf --locale=en; rm -rf dist-serve/en; cp -R dist/en dist-serve/en;",
    "build-i18n-prod": "read varname;for lang in $varname; do ng build --prod --output-path=dist/$lang --build-optimizer=false --bh /v2/$lang/ --i18n-file=src/i18n/messages.$lang.xlf --i18n-format=xlf --locale=$lang; rm -rf dist-serve/$lang; cp -R dist/$lang dist-serve/$lang; done",
    "build-i18n-prod-en": "ng build --prod --output-path=dist/en --build-optimizer=false --bh /v2/en/ --i18n-file=src/i18n/messages.en.xlf --i18n-format=xlf --locale=en; rm -rf dist-serve/en; cp -R dist/en dist-serve/en",
    "build-dev": "ng build --aot=true -oh=all -sm=false -ec=true -nc=false --build-optimizer=true  -d=/v2/ -bh=/v2/",
    "build-i18n-beta-all": "rm -rf dist-serve-old; cp -R dist-serve dist-serve-old; for lang in en ar cs da de pl el es fil fr hi hu id it ja ka ms nl pt ru sw th tr vi zh; do ng build --env=beta --output-path=dist/$lang --aot=true -oh=all -sm=false -ec=true -nc=false --build-optimizer=true --bh /v2/$lang/ --i18n-file=src/i18n/messages.$lang.xlf --i18n-format=xlf --locale=$lang; rm -rf dist-serve/$lang; cp -R dist/$lang dist-serve/$lang; done",
    "build-i18n-staging": "read varname;for lang in en; do ng build --env=staging --output-path=dist/$lang --aot=true -oh=all -sm=false -ec=true -nc=false --build-optimizer=true --bh /v2/$lang/ --i18n-file=src/i18n/messages.$lang.xlf --i18n-format=xlf --locale=$lang; rm -rf dist-serve/$lang; cp -R dist/$lang dist-serve/$lang; done",
    "build-i18n-test-en": "for lang in en; do ng build --env=beta --output-path=dist/en --aot=true -oh=all -sm=false -ec=true -nc=false --build-optimizer=true --bh /v2/en/ --i18n-file=src/i18n/messages.en.xlf --i18n-format=xlf --locale=en; rm -rf dist-serve/en; cp -R dist/en dist-serve/en; done",
    "build-i18n-staging-en": "ng build --env=staging --output-path=dist/en --aot=true -oh=all -sm=false -ec=true -nc=false --build-optimizer=true --bh /v2/en/ --i18n-file=src/i18n/messages.en.xlf --i18n-format=xlf --locale=en; rm -rf dist-serve/en; cp -R dist/en dist-serve/en;",
    "build-i18n-beta": "read varname;for lang in en; do ng build --env=beta --output-path=dist/$lang --aot=true -oh=all -sm=false -ec=true -nc=false --build-optimizer=true --bh /v2/$lang/ --i18n-file=src/i18n/messages.$lang.xlf --i18n-format=xlf --locale=$lang; rm -rf dist-serve/$lang; cp -R dist/$lang dist-serve/$lang; done",
    "build-i18n-dev": "read varname;for lang in en; do ng build --env=dev --output-path=dist/$lang --aot=true -oh=all -sm=false -ec=true -nc=false --build-optimizer=true --bh /v2/$lang/ --i18n-file=src/i18n/messages.$lang.xlf --i18n-format=xlf --locale=$lang; rm -rf dist-serve/$lang; cp -R dist/$lang dist-serve/$lang; done",
    "build-i18n-beta-en": "ng build --env=beta --output-path=dist/en --aot=true -oh=all -sm=false -ec=true -nc=false --build-optimizer=true --bh /v2/en/ --i18n-file=src/i18n/messages.en.xlf --i18n-format=xlf --locale=en; rm -rf dist-serve/en; cp -R dist/en dist-serve/en;",
    "build": "ng build --prod --build-optimizer=false -d=/v2/ -bh=/v2/",
    "test": "ng test",
    "lint": "ng lint",
    "e2e": "ng e2e",
    "i18n-prod": "ng serve --aot --i18n-file=src/i18n/messages.ar.xlf --locale=en --i18n-format=xlf",
    "compile-i18n": "ng xi18n --output-path src/i18n",
    "create-all-lang-json": "node src/languages/json-to-json-map.js ar en cs da pl de el es fil fr hi hu id it ja ka ms nl pt ru sw th tr vi zh",
    "create-lang-json": "node src/languages/json-to-json-map.js $1",
    "create-all-xlfs": "node src/languages/map-from-json.js ar en cs da de el es pl fil fr hi hu id it ja ka ms nl pt ru sw th tr vi zh",
    "create-xlf": "node src/languages/map-from-json.js $1",
    "translateMap": "node src/temp/json-to-csv.js $1",
    "update-server-json": "node src/temp/update-server-json.js $1",
    "test1": "for lang in $langCode; do ng build --output-path=dist/$lang --aot=true -oh=all -sm=false -ec=true -nc=false --build-optimizer=true --bh /v2/$lang/ --i18n-file=src/i18n/messages.$lang.xlf --i18n-format=xlf --locale=$lang; rm -rf dist-serve/$lang; cp -R dist/$lang dist-serve/$lang; done",
    "dyn-build-prod": "for lang in $langCode; do ng build --prod --output-path=dist/$lang --build-optimizer=false --bh /v2/$lang/ --i18n-file=src/i18n/messages.$lang.xlf --i18n-format=xlf --locale=$lang; rm -rf dist-serve/$lang; cp -R dist/$lang dist-serve/$lang; done"
  },
  "private": true,
  "dependencies": {
    "@agm/core": "1.0.0-beta.2",
    "@angular/animations": "^5.2.0",
    "@angular/common": "^5.2.0",
    "@angular/compiler": "^5.2.0",
    "@angular/core": "^5.2.0",
    "@angular/forms": "^5.2.0",
    "@angular/http": "^5.2.0",
    "@angular/platform-browser": "^5.2.0",
    "@angular/platform-browser-dynamic": "^5.2.0",
    "@angular/router": "^5.2.0",
    "@ngui/map": "^0.30.3",
    "@types/googlemaps": "3.36.5",
    "angular2-text-mask": "^9.0.0",
    "bootstrap": "^4.1.0",
    "classlist.js": "^1.1.20150312",
    "core-js": "^2.4.1",
    "font-awesome": "^4.7.0",
    "google-libphonenumber": "^3.1.3",
    "i18n": "^0.8.3",
    "json2csv": "^4.1.5",
    "ng2-daterangepicker": "^2.0.12",
    "ngx-bootstrap": "2.0.5",
    "node-cmd": "^3.0.0",
    "node-sass": "^4.9.4",
    "primeng": "^5.2.4",
    "rxjs": "^5.5.6",
    "web-animations-js": "^2.3.1",
    "zone.js": "^0.8.19"
  },
  "devDependencies": {
    "@angular/cli": "~1.7.0",
    "@angular/compiler-cli": "^5.2.0",
    "@angular/language-service": "^5.2.0",
    "@types/google.analytics": "0.0.39",
    "@types/jasmine": "~2.8.3",
    "@types/jasminewd2": "~2.0.2",
    "@types/node": "~6.0.60",
    "codelyzer": "^4.0.1",
    "jasmine-core": "~2.8.0",
    "jasmine-spec-reporter": "~4.2.1",
    "karma": "~2.0.0",
    "karma-chrome-launcher": "~2.2.0",
    "karma-coverage-istanbul-reporter": "^1.2.1",
    "karma-jasmine": "~1.1.0",
    "karma-jasmine-html-reporter": "^0.2.2",
    "protractor": "~5.1.2",
    "ts-node": "~4.1.0",
    "tslint": "~5.9.1",
    "typescript": "~2.5.3"
  }
}
